//
//  Computer_tests.swift
//  AdventOfCode-UnitTests
//
//  Created by Otto Schnurr on 12/13/19.
//

import XCTest
import AdventOfCode

class Computer_tests: XCTestCase {

    func test_day02() {
        let original = [
            1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,6,1,19,1,19,5,23,2,10,23,27,2,27,13,31,
            1,10,31,35,1,35,9,39,2,39,13,43,1,43,5,47,1,47,6,51,2,6,51,55,1,5,55,59,
            2,9,59,63,2,6,63,67,1,13,67,71,1,9,71,75,2,13,75,79,1,79,10,83,2,83,9,87,
            1,5,87,91,2,91,6,95,2,13,95,99,1,99,5,103,1,103,2,107,1,107,10,0,99,2,
            0,14,0
        ]
        
        func makeProgram(noun: Word, verb: Word) -> Program {
            var program = original
            program[1] = noun
            program[2] = verb
            return program
        }
        
        let computer = Computer(program: makeProgram(noun: 12, verb: 2))
        computer.run()
        XCTAssertEqual(computer.firstWord, 4570637)
        
        computer.load(program: makeProgram(noun: 54, verb: 85))
        computer.run()
        XCTAssertEqual(computer.firstWord, 19690720)
    }
    
    func test_day05() {
        let program = [
            3,225,1,225,6,6,1100,1,238,225,104,0,1102,91,92,225,1102,85,13,
            225,1,47,17,224,101,-176,224,224,4,224,1002,223,8,223,1001,224,
            7,224,1,223,224,223,1102,79,43,225,1102,91,79,225,1101,94,61,
            225,1002,99,42,224,1001,224,-1890,224,4,224,1002,223,8,223,1001,
            224,6,224,1,224,223,223,102,77,52,224,1001,224,-4697,224,4,224,
            102,8,223,223,1001,224,7,224,1,224,223,223,1101,45,47,225,1001,
            43,93,224,1001,224,-172,224,4,224,102,8,223,223,1001,224,1,224,
            1,224,223,223,1102,53,88,225,1101,64,75,225,2,14,129,224,101,
            -5888,224,224,4,224,102,8,223,223,101,6,224,224,1,223,224,223,
            101,60,126,224,101,-148,224,224,4,224,1002,223,8,223,1001,224,
            2,224,1,224,223,223,1102,82,56,224,1001,224,-4592,224,4,224,1002,
            223,8,223,101,4,224,224,1,224,223,223,1101,22,82,224,1001,224,
            -104,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,4,223,
            99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,
            1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,
            1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,
            1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,
            1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,
            0,1105,1,99999,8,226,677,224,102,2,223,223,1005,224,329,1001,223,
            1,223,1007,226,226,224,1002,223,2,223,1006,224,344,101,1,223,223,
            108,226,226,224,1002,223,2,223,1006,224,359,1001,223,1,223,107,
            226,677,224,102,2,223,223,1006,224,374,101,1,223,223,8,677,677,
            224,102,2,223,223,1006,224,389,1001,223,1,223,1008,226,677,224,
            1002,223,2,223,1006,224,404,101,1,223,223,7,677,677,224,1002,223,
            2,223,1005,224,419,101,1,223,223,1108,226,677,224,1002,223,2,223,
            1005,224,434,101,1,223,223,1108,226,226,224,102,2,223,223,1005,
            224,449,1001,223,1,223,107,226,226,224,102,2,223,223,1005,224,
            464,101,1,223,223,1007,677,677,224,102,2,223,223,1006,224,479,
            101,1,223,223,1007,226,677,224,102,2,223,223,1005,224,494,1001,
            223,1,223,1008,226,226,224,1002,223,2,223,1005,224,509,1001,223,
            1,223,1108,677,226,224,1002,223,2,223,1006,224,524,1001,223,1,223,
            108,677,677,224,1002,223,2,223,1005,224,539,101,1,223,223,108,226,
            677,224,1002,223,2,223,1005,224,554,101,1,223,223,1008,677,677,
            224,1002,223,2,223,1006,224,569,1001,223,1,223,1107,677,677,224,
            102,2,223,223,1005,224,584,1001,223,1,223,7,677,226,224,102,2,223,
            223,1005,224,599,1001,223,1,223,8,677,226,224,1002,223,2,223,1005,
            224,614,1001,223,1,223,7,226,677,224,1002,223,2,223,1006,224,629,
            101,1,223,223,1107,677,226,224,1002,223,2,223,1005,224,644,1001,
            223,1,223,1107,226,677,224,102,2,223,223,1006,224,659,1001,223,
            1,223,107,677,677,224,1002,223,2,223,1005,224,674,101,1,223,223,
            4,223,99,226
        ]
        
        let computer = Computer(program: program)
        computer.inputBuffer = [1]
        computer.run()
        XCTAssertEqual(
            computer.outputBuffer, [0, 0, 0, 0, 0, 0, 0, 0, 0, 16489636]
        )

        computer.load(program: program)
        computer.inputBuffer = [5]
        computer.run()
        XCTAssertEqual(computer.outputBuffer, [9386583])
    }

}
